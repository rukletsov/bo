
LIBRARY
================================================================================
[DONE] CMake msvc compiler options.
* CMake different options for debug/release configuration.
[DONE] * Supress msvc unsafe CRT warnings.
* Put windows-dependent code under #ifdef.
[DONE] Look at CMake's special functions such as FindBoost and, probably, 
  FindSTLPort.
[DONE] add .hgeol file.
[DONE] Create an auto test project (look at boost::test or Google Test Framework).
* Check types compatibility (size_t, int, unsigned, etc).


Mesh class
================================================================================
* Check algorithms and investigate speed-up possibilites (pointers, inline, etc).
* Add logging levels in operator <<().
* Make Mesh thread-safe.
* Do not add duplicated faces, edges, points.
? Do not add "close" points, e.g. which are in radius of two-three floats; 
  use existed point instead.
* Make well-designed accessor functions (see standard graph representations).
* Implement "primitive-object" for Mesh class in order to visualize a Mesh.
* Create vertex moving function.
* Check English names for mesh terms (basic graph and mesh definitions).


Vector<> class
================================================================================
[DONE] * Make an n-dimensional vector based on boost::array.
[DONE] * Add useful mathematical methods, e.g. normalize(), etc.
[DONE] * Implement operator+=, operator-=, etc.
[DONE] * Test if function inlining gives some performace boost (ANSWER: more or
  less NO).
[DONE] Rewrite min(), max(), min_index(), max_index(), sum(), product() using 
  appropriate std algorithms, such as std::min_element(), std::accumulate().


Triangle<> class
================================================================================
* Implement Equals() method.


OTHER
================================================================================
* Look and compare 3rd-party mesh implementations: 
  VCG (http://vcg.sourceforge.net/index.php/Main_Page), 
  OpenMesh (http://www.openmesh.org/), 
  Meshlab (http://meshlab.sourceforge.net/).
